/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * base.java
 *
 * Created on 19 Sep, 2011, 2:08:46 AM
 */

package acm_table;

import com.sun.org.apache.xerces.internal.parsers.CachingParserPool.SynchronizedGrammarPool;
import java.awt.FileDialog;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prashant
 */
public class base extends javax.swing.JFrame implements MouseListener,WindowListener {
      TextTransfer textTransfer;
        static int i,FLAG;
       String newcontents,prev;
       DefaultTableModel model;
  





    /** Creates new form base */
    public base()
    {
        textTransfer=new TextTransfer();
        i=0;
       
        prev="";
  
        initComponents();
       FLAG=0;
        model=( DefaultTableModel)clipbase.getModel();
        jScrollPane1.setAutoscrolls(true);
        
        clipbase.addMouseListener(this);
       addWindowListener(this);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        clipbase = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        save = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        undo = new javax.swing.JMenuItem();
        reset = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        clipbase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}

            },
            new String [] {
                ""
            }
        ));
        clipbase.setRowHeight(25);
        jScrollPane1.setViewportView(clipbase);

        file.setText("File");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        file.add(save);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        jMenuBar1.add(file);

        edit.setText("Edit");

        undo.setText("Undo");
        undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoActionPerformed(evt);
            }
        });
        edit.add(undo);

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        edit.add(reset);

        jMenuBar1.add(edit);

        jMenu1.setText("Help");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoActionPerformed
       FLAG=0;
        if(i!=0)
        {
             clipbase.getModel().setValueAt( (Object)"",i-1,0);
             i--;
               if(i==0)
                    prev="";
                else
               {
                    String old_contents = (String) clipbase.getModel().getValueAt(i - 1, 0);
                    prev=old_contents;
                    textTransfer.setClipboardContents(old_contents);
                }
        }
    }//GEN-LAST:event_undoActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        FLAG=0;
        for(int j=0;j<i;j++)
       {
           clipbase.getModel().setValueAt((Object) "", j, 0);
        }
        i=0;
        textTransfer.setClipboardContents("");
    }//GEN-LAST:event_resetActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
      
      if(FLAG==1)
          System.exit(0);
      else
      { close();
      }
    }//GEN-LAST:event_exitActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

       save();
    }//GEN-LAST:event_saveActionPerformed

     public void checker()
             {
                 FLAG=0;
                     newcontents=textTransfer.getClipboardContents();

        if (!(newcontents.equals(prev)) && (!newcontents.equals("")) )
        {
         if(i>9)
                      model.addRow(new Object[]{newcontents});
                 else
                      clipbase.getModel().setValueAt((Object)newcontents,i,0);
                   prev=newcontents;
                   i++;
     }
    }
    private void save()
    {
         String source="";
               for(int k=0;k<i;k++)
               {
                   
                   if(clipbase.getValueAt(k, 0)!=null || !(clipbase.getValueAt(k, 0).equals("")))
                   {
                   source=source + (String)clipbase.getValueAt(k, 0);
                   source=source + "\n";
               }
        }
                  

                
                  FileDialog f=new FileDialog(this,"Save as...",1);
                  f.setMode(FileDialog.SAVE);


		f.setVisible(true);
                String path=f.getDirectory()+File.separator + f.getFile();
                
                File fd=new File(path);

try{
                  
                    FileWriter fout=new FileWriter(fd );
			fout.write(source);


        fout.flush();
        fout.close();
        
}catch(Exception e){

}
                FLAG=1;
    }
private void close()
    {  String[] choices = {
         "Save and Quit", "Quit without saving", "CANCEL"
       };

      int result = JOptionPane.showOptionDialog(this,
         "Do y0u want to save before quitting?", "Warning",
         JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE,
         null, choices, choices[0]);
      if(result==0)
      {
          save();
      }
      if(result==1)
          System.exit(0);
}


             

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable clipbase;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem reset;
    private javax.swing.JMenuItem save;
    private javax.swing.JMenuItem undo;
    // End of variables declaration//GEN-END:variables

   
    public void mouseClicked(MouseEvent e) {
        int rsel=-1;;
        String add_contents=null;
      try{
              rsel=clipbase.getSelectedRow();
        }catch(java.lang.NullPointerException ex)
          {System.out.println("No data in selected in row");
        }
         if(rsel!=-1){


         add_contents=(String)clipbase.getValueAt(rsel, 0);
         prev=add_contents;
       
            textTransfer.setClipboardContents(add_contents);
            }
      

    }

    public void mousePressed(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

 public void mouseReleased(MouseEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet.");
    }

    public void mouseEntered(MouseEvent e) {
         
    }

    public void mouseExited(MouseEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet.");

       }


   public void windowClosing(WindowEvent e) {
          if(FLAG==0)
              close();
          else
              System.exit(0);
        
    
   }

    public void windowClosed(WindowEvent e) {

        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowIconified(WindowEvent e) {
       // throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowDeiconified(WindowEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowActivated(WindowEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowDeactivated(WindowEvent e) {
       // throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowOpened(WindowEvent e) {
       // throw new UnsupportedOperationException("Not supported yet.");
    }

}

