package javaapplication1;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
/**
 * @author Dell
 */
public class GUI extends javax.swing.JFrame {

    
    /** Creates new form GUI */
    public GUI() {
        initComponents();
         folders = new HashMap<String, Set<String>>();
         coh=new HashMap<String,Double>();
         coup=new HashMap<String,Double>();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        PackageCohesion = new javax.swing.JButton();
        PackageCoupling = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Get Classes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cohesion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Project Path");

        jButton4.setText("Save in File");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        PackageCohesion.setText("PackageCohesion");
        PackageCohesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PackageCohesionActionPerformed(evt);
            }
        });

        PackageCoupling.setText("Package Coupling");
        PackageCoupling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PackageCouplingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(63, 63, 63)
                        .addComponent(PackageCoupling)
                        .addGap(63, 63, 63)
                        .addComponent(PackageCohesion)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(jButton1))
                                .addGap(98, 98, 98))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(PackageCoupling)
                    .addComponent(PackageCohesion))
                .addContainerGap(140, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String projectPath=null;
Set<String> classes;
Map<String,Set<String> > folders;
Map<String,Double> coh;
Map<String,Double> coup;
public void parseForClasses(String projectPath)
    { 
        String file;
        File folder = new File(projectPath);
        File[] listOfFiles = folder.listFiles();
   
        for (int i = 0; i < listOfFiles.length; i++) 
        {  file = listOfFiles[i].getName();
            if (listOfFiles[i].isDirectory()) 
            {
                this.parseForClasses(projectPath+"/"+listOfFiles[i].getName());
            }
            else
                if(listOfFiles[i].isFile() && listOfFiles[i].getName().toString().endsWith(".java"))
                {    
                      classes.add(file);
                      String fold=listOfFiles[i].getParentFile().getName();
                      if(folders.containsKey(fold))
                      {
                          folders.get(fold).add(file);
                      }
                       else
                      {
                          Set<String> name=new HashSet<String>();
                          name.add(file);
                          folders.put(fold,name);
                      }
                      
                 
                }
           }
      }        

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  projectPath=jTextField1.getText();
  classes=new HashSet();
  parseForClasses(projectPath);
  ComboBoxModel listOfClasses = new DefaultComboBoxModel(classes.toArray());
  jComboBox1.setModel(listOfClasses);
    // TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    if(projectPath!=null)
    {
String className= jComboBox1.getSelectedItem().toString();
className=className.replace(".java","");
double cohesion= Cohesion.calculateCohesion(projectPath,className);
String display = "Cohesion for Class "+className+" is "+Double.toString(cohesion);

jLabel1.setText(display);
    }
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
  writeCohesiontoFile();
  writeCouplingtoFile();
    // TODO add your handling code here:
}//GEN-LAST:event_jButton4ActionPerformed

private void PackageCohesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PackageCohesionActionPerformed
// TODO add your handling code here:
        for(String className: classes)
           {       className=className.replace(".java","");
                   double cohesion=Cohesion.calculateCohesion(projectPath, className);
                   
                   coh.put(className,cohesion);
           }
    for(String key:folders.keySet())
    { double cohesion=0.0;
        int count=0;
         
       for(String name:folders.get(key))
        {   count++;
            name=name.replace(".java",""); 
            cohesion+=coh.get(name); 
        }
       System.out.println("Package : "+ key +"  Cohesion Addition :"+ cohesion +"  Average Cohesion :" + cohesion/count);
    }
    
}//GEN-LAST:event_PackageCohesionActionPerformed

private void PackageCouplingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PackageCouplingActionPerformed
// TODO add your handling code here:
     for(String className: classes)
           {       className=className.replace(".java","");
                   double coupling=Coupling.getCoupling(projectPath, className,null);
                    System.out.println(className + "   " + coupling);
                   coup.put(className,coupling);
           }
    for(String key:folders.keySet())
    { double coupling=0.0;
        int count=0;
         
       for(String name:folders.get(key))
        {   count++;
            name=name.replace(".java",""); 
            coupling+=coup.get(name); 
        }
       System.out.println("Package : "+ key +"  Coupling Addition :"+ coupling +"  Average Coupling :" + coupling/count);
    }
}//GEN-LAST:event_PackageCouplingActionPerformed
    /**
     * @param args the command line arguments
     */
private void writeCohesiontoFile()
{   if(projectPath!=null)
   {   try {   parseForClasses(projectPath);
            File file = new File(projectPath+"\\Cohesion.txt");
            if(file.exists()==true)
                file.delete();
           file.createNewFile();
           FileWriter writer = new FileWriter(file);
           for(String className: classes)
           {       className=className.replace(".java","");
                   double cohesion=Cohesion.calculateCohesion(projectPath, className);
                   writer.write(className + "---"+cohesion +".\r\n"); 
                   coh.put(className,cohesion);
           }
                      
                       writer.close();
             
            } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
             }
   }   
}
private void writeCouplingtoFile()
{
     if(projectPath!=null)
   {        try {
                parseForClasses(projectPath);
                   
                 
                   File file = new File(projectPath+"\\Coupling.txt");
                   if(file.exists()==true)
                   file.delete();
                   file.createNewFile();
                   FileWriter writer = new FileWriter(file);
                   for(String className: classes)
                   {
                   className=className.replace(".java","");
                   Coupling.getCoupling(projectPath,className,writer);
                   }
                 writer.flush();
                 writer.close();
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
             
         
   } 
    
}
public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PackageCohesion;
    private javax.swing.JButton PackageCoupling;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
